version: "3"
services:
  frontend:
    # use nginx as a mock frontend since the frontend isn't built or used at this stage
    image: nginx:alpine

  test-runner:
    image: wycliffeassociates/doc:${IMAGE_TAG}
    depends_on:
      api:
        condition: service_healthy
      worker:
        condition: service_healthy
      fileserver:
        condition: service_healthy
      celery-dashboard:
        condition: service_started

    entrypoint: pytest
    command:
      [
        "-v",
        "-m",
        "not\ randomized",
        "-n",
        "auto",
        "/app/tests/unit",
        "/app/tests/e2e",
      ]
    environment:
      BACKEND_API_URL: http://localhost:5005
      FILE_SERVER_URL: http://localhost:8089
      LOGROCKET_ID: ${LOGROCKET_ID:-ct7zyg/interleaved-resource-generator}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      FROM_EMAIL_ADDRESS: ${FROM_EMAIL_ADDRESS}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SEND_EMAIL: ${SEND_EMAIL}
    volumes:
      - shared:/app/document_output

volumes:
  shared:
