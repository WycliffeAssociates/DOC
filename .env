# -*- mode: conf-unix; -*-

# NOTE The values in this file get interpreted by pydantic
# BaseSettings as JSON formatted data. This is why, for example,
# booleans use true and false rather than Python's True or False.

# NOTE Remember to quote strings that have characters that need to be
# otherwise escaped. For example:
# foo=This is ok without quotes
# bar="This wouldn't be ok without quotes"

# Used in Dockerfile to get wkhtmltox
WKHTMLTOX_LOC=https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb

# Location where the api finds translations.json
TRANSLATIONS_JSON_LOCATION=http://bibleineverylanguage.org/wp-content/themes/bb-theme-child/data/translations.json
LOGGING_CONFIG=src/document/logging_config.yaml

# Container facing port for Uvicorn Python server.
API_LOCAL_PORT=5005

# Return the message to the API client to show to user on successful
# generation of PDF.
SUCCESS_MESSAGE="Success! Please retrieve your generated document using a GET REST request to /pdf/{document_request_key} where document_request_key is the finished_document_request_key in this payload."

# Return the message to show to user on failure generating PDF.
FAILURE_MESSAGE="The document request could not be fulfilled either because the resources requested are not available either currently or at all or because the system does not yet support the resources requested."

# Sending emails if off by default due to automated testing, turn it
# on for production use
SEND_EMAIL=false
FROM_EMAIL_ADDRESS=fake@example.com
SMTP_PASSWORD=realpasswordgoeshere
# TO_EMAIL is only used in test runs
TO_EMAIL_ADDRESS=fake@exmaple.com
EMAIL_SEND_SUBJECT=The BIEL PDF you requested is attached
SMTP_HOST=smtp.example.com
SMTP_PORT=587

# We are running in the container. This is used by the system to
# determine the location of the working and output directories.
IN_CONTAINER=true
# The port to pass to gunicorn via ./backend/gunicorn.conf.py
PORT=5005
# If true, run pytest test suite during docker build of backend container to verify correctness and
# to generate assets which preheat cache. Note that it takes about 30
# minutes for the test suite to conclude, hence it is set to false by
# default.
RUN_TESTS=false
# Control caching of resource assets to save on network traffic
ENABLE_ASSET_CACHING=true
# Caching window of time in which cloned or downloaded resource asset
# files on disk are considered fresh rather than reacqiring them. In hours.
ASSET_CACHING_PERIOD=72

#  * http://localhost:3000 covers requests originating from 'npm run dev'
#  which executes vite build and runtime system on port 3000 for
#  development mode.
#  * http://localhost:8001 covers requests originating from 'npm run
#  build' which executes vite build and runtime system on port 80 which
#  is then mapped to port 8001 in docker-compose.yml.
#  * https://irguidev.walink.org covers requests originating from the
#  developemt/staging server at WA (remember: all values must be JSON
#  formatted)
BACKEND_CORS_ORIGINS='["http://localhost:3000", "http://localhost:8001", "https://irguidev.walink.org"]'

# local image tag for local dev with prod image
IMAGE_TAG=local
